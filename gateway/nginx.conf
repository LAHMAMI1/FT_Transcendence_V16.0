events { }

http {
    # Define upstreams for microservices using their Docker service names
    upstream auth_service {
        server auth-service:3001;
    }
    
    upstream management_service {
        server management-service:3002;
    }

    upstream twofa_service {
        server twofa-service:3003;
    }

    server {
        listen 443 ssl;
        server_name localhost;

        # SSL certificate configuration
        ssl_certificate     /etc/nginx/ssl/cert.pem;
        ssl_certificate_key /etc/nginx/ssl/key.pem;
        ssl_protocols       TLSv1.2 TLSv1.3;
        ssl_ciphers         HIGH:!aNULL:!MD5;
        ssl_prefer_server_ciphers on;

        # websocket support
        location /ws {
            proxy_pass http://management_service/ws;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Proxy /auth requests to the Auth Service
        location /auth/ {
            proxy_pass http://auth_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Proxy / requests to the Management Service
        location / {
            proxy_pass http://management_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }

        # Proxy /2fa requests to the twofa Service
        location /2fa/ {
            proxy_pass http://twofa_service;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        }
    }
}