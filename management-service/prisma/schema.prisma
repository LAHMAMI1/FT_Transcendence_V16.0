// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"]
}

datasource db {
  provider = "sqlite"
  url      = env("MANAGEMENT_DATABASE_URL")
}

model manageUser {
  id         Int      @id @default(autoincrement())
  authUserId Int      @unique
  first_name String
  last_name  String
  username   String   @unique
  avatar     String   @default("./avatars/default.jpg")
  lastSeen   DateTime @default(now())
  isOnline   Boolean  @default(false)

  wins   Int @default(0)
  losses Int @default(0)
  draws  Int @default(0)

  // Outgoing friend requests (this user has added these friends)
  sentFriendRequests     friend[] @relation("OutgoingFriends")
  // Incoming friend requests (other users have added this user)
  receivedFriendRequests friend[] @relation("IncomingFriends")

  // Matches played by this user
  playerMatches   matchHistory[] @relation("PlayerMatches")
  opponentMatches matchHistory[] @relation("OpponentMatches")
}

model friend {
  id        Int      @id @default(autoincrement())
  userId    Int
  friendId  Int
  status    String // "pending", "accepted", "rejected"
  createdAt DateTime @default(now())

  // The user who sends the friend request
  user   manageUser @relation("OutgoingFriends", fields: [userId], references: [authUserId])
  // The user who receives the friend request
  friend manageUser @relation("IncomingFriends", fields: [friendId], references: [authUserId])

  @@unique([userId, friendId], name: "UserFriendUnique") // Ensure that each pair of users is unique
}

model matchHistory {
  id            Int      @id @default(autoincrement())
  playerId      Int
  opponentId    Int
  createdAt     DateTime @default(now())
  gameResult    String // "win", "loss", "draw"
  playerScore   Int
  opponentScore Int

  player   manageUser @relation("PlayerMatches", fields: [playerId], references: [authUserId])
  opponent manageUser @relation("OpponentMatches", fields: [opponentId], references: [authUserId])
}
